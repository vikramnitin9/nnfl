# coding: utf-8

# In[1]:

import os
import numpy as np

import _pickle as cPickle

# demo script for running CIDEr
import json
from pydataformat.loadData import LoadData
from pyciderevalcap.eval import CIDErEvalCap as ciderEval

pathToData = 'COCO/'
refName = 'annotations/captions_train2014.json'
df_mode = 'coco-val-df'
image_dir = 'train2014'

# In[2]:

# load reference and candidate sentences
# loadDat = LoadData(pathToData)
# ref = loadDat.readJson(refName)

ann_path = os.path.join(pathToData, refName)

data = json.load(open(ann_path, 'r'))

ann_data = data['annotations']

# print(ann_data[291]['caption'])

print(data['images'][0].keys())
print(ann_data[0].keys())

image_ids = [ann['image_id'] for ann in ann_data]
annotations = [ann['caption'] for ann in ann_data]

images = os.listdir(os.path.join(pathToData, image_dir))

print(image_ids[:5])

names = ["COCO_train2014_" + "{:012}".format(int(i)) + '.jpg' for i in image_ids]

print(names[:5])

caption_dict = {}

for i in range(len(annotations)):
	caption_dict[names[i]] = annotations[i]

with open('precomputed/fc7-features.pkl', 'rb') as f:
	features = cPickle.load(f)

K = 10
curr_score = []

for key in features:
	print(key)
	dist = []
	for key2 in features:
		dist.append(np.sqrt(np.sum((features[key] - features[key2]) ** 2)))

	ind = np.argpartition(dist, -K)[-K:]

	gts = [caption_dict[key]]
	res = [caption_dict[names[i]] for i in ind]

	scorer = ciderEval(gts, res, df='coco-val-df')
	curr_score = scorer.evaluate()['CIDEr']
	scores.append(curr_score)
